; This is the Calva evaluation results output window.
; Leave it open, please. Because quirks.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - File URLs in stacktrace frames are peekable and clickable.
clj::dropitem.core=> 
; Jack-in done.
; Evaluating file: core.clj
#'dropitem.core/-main
clj::dropitem.core=> 
#'dropitem.core/-main
clj::dropitem.core=> 
hello world
nil
clj::dropitem.core=> 
; Evaluating file: core.clj
nil
clj::dropitem.core=> 
(1 2 3 4)
nil
clj::dropitem.core=> 
; Evaluating file: core.clj
nil
clj::dropitem.core=> 
#{1 4 3 2}
nil
clj::dropitem.core=> 
(1 2 3 4)
nil
clj::dropitem.core=> 
#{1 4 3 2}
nil
clj::dropitem.core=> 
[1 4 3 2]
clj::dropitem.core=> 
#{1 4 3 2}
clj::dropitem.core=> 
#{4 3 2}
clj::dropitem.core=> 
#{4 3 2}
clj::dropitem.core=> 
#{1 4 3 2}
clj::dropitem.core=> 
; Evaluating file: core.clj
nil
clj::dropitem.core=> 
{:a 1, :c 3}
clj::dropitem.core=> 
; Evaluating file: core.clj
nil
clj::dropitem.core=> 
[1 2 3]
clj::dropitem.core=> 
(1 2)
clj::dropitem.core=> 
(1 2)
clj::dropitem.core=> 
[1 2]
clj::dropitem.core=> 
